<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btHuy.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAldEVYdFRpdGxlAFJlbW92ZVBpdm90RmllbGQ7RGVsZXRlO1JlbW92ZTt2jMaRAAAD+klEQVRY
        R8VXf0hVZxj+Grj2Twy2f2YhQ+ccq1BTU3PpBXVapJGVik77YV5CY87bxm1Zri3XsZtFZyesWdtg/TFR
        wYRiNQZClASGzX5srlxLLPPHFNvmRv894/l279W83z3neoN64YH3e7/3ed5Hv3O+wxUAxPOET+FZYzpR
        xzwhxAtuMA80LHmBGCA5pC/XVkcwd9esIiCelQESXryZk6aNnzwKgjlrKrEZETDPzIAU6V2Tpo0dP4TH
        1zolmLOmEguG58+AFOlZnaqNNrrwb9dZ/H3mhARz1rg3WywYnsoAH5aQ7uyV2vCxevxzqQN/tn6Bya8/
        k2DOGvfYM0NMDp8Dj8/EPJUBCs2/lJnieuDajUctOiaaajFxouZ/NNXi0XeHMXWxDUNGHbreTakXQrxE
        MGeNe+zx4bXooCa1OYOz/BoQQrzyvS1R/91px3hjDcaNXdNorMHkaRemOpsxqH+KzvRkF8GcNe6pONSi
        JrXNDMgjEEIsEEKEdqxMMPodWzCmOzF25MNp6E5MfPM5/vrxW9w7vEeCOWuqXmpQi5pubb9H4H2YhBAv
        CyEWtqXEG31VJRhtcGDkYJUXXP9x8hNMnjEkmKt6yKUGtdyapg+h0kRzUpxxq7IIwwd24OH+Ci+4HuHQ
        BodyjxxyVcOtDDCeMHF6eazRay/A0L7teLDXbgr2sJccf8MZVgYYT5j4Ki7mWM/W9bi/uwyDzi1KcI89
        7DUbzgjEAINEvmqvNsVG61ft+Rj8eCsGqouV4B572EuOm+sznDEnA6diY1w9H2yS5z3geA93K/KV4B57
        2EvO0xqQR/BldHR9d2UxRhuqMbCzBL/Z16N/2zoluMce9pJDbrBHIIc3Lo3WrpQXYGR/Be7tKMCdzbm4
        XbrGFOxhLznkUkNlwsyAHH707aXa5dI8DNeU4W75OvxatAp9hVlecP1DZqqEao8ccqlBrdkm/BmQwxui
        lmgXC3Px0FGC/tIc/LIhEz/npXvB9fmMVNRGRB0nmKt6yKUGtahpdRHJq1iLXKx15q3CUGU+7hRm4dba
        NNzMSfWC63O2FdgTHsVXLZxgzpqqlxrUoia1za5iOpu/L/wt14UsG25vzMCN1Sm4nr3CC6473knErtff
        9FwyfNWIhaxxT8WhFjWpbfYxkgb4xXKGRertyQm4npmI3vTlEszbk+LxUVjkzBtOfo49lxX32OPDS04A
        Nef0Naxe9IbRFr8MP9niJZizprjh5HPjMWHCm/vXsCo0wmhdFgOCuWJ40Dx/BmaLhb7/WoROuP8C1fCg
        eGYGGB4x/st4bgRzf8M9ETDPygCDBJ4XHxpC+QNDEQHxAjHAsPyJ5ScseT4Gnhd8Cs8a/wEQ8mJJQ8vx
        kwAAAABJRU5ErkJggg==
</value>
  </data>
</root>